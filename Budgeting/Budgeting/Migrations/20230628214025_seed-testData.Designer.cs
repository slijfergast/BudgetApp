// <auto-generated />
using System;
using Budgeting.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Budgeting.Migrations
{
    [DbContext(typeof(BudgetingDbContext))]
    [Migration("20230628214025_seed-testData")]
    partial class seedtestData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Budgeting.Model.CostItem", b =>
                {
                    b.Property<int>("CostItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostItemId"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("CostPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfCost")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CostItemId");

                    b.HasIndex("CostPeriodId");

                    b.ToTable("CostItems");

                    b.HasData(
                        new
                        {
                            CostItemId = -2,
                            Cost = 100.0,
                            CostPeriodId = -1,
                            DateOfCost = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = false
                        },
                        new
                        {
                            CostItemId = -1,
                            Cost = 100.0,
                            CostPeriodId = -1,
                            DateOfCost = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = false
                        });
                });

            modelBuilder.Entity("Budgeting.Model.CostPeriod", b =>
                {
                    b.Property<int>("CostPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostPeriodId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CostPeriodId");

                    b.ToTable("CostPeriods");

                    b.HasData(
                        new
                        {
                            CostPeriodId = -1,
                            Name = "test_item"
                        });
                });

            modelBuilder.Entity("Budgeting.Model.CostItem", b =>
                {
                    b.HasOne("Budgeting.Model.CostPeriod", "CostPeriod")
                        .WithMany("CostItems")
                        .HasForeignKey("CostPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostPeriod");
                });

            modelBuilder.Entity("Budgeting.Model.CostPeriod", b =>
                {
                    b.Navigation("CostItems");
                });
#pragma warning restore 612, 618
        }
    }
}
